# PowerShell —Å–∫—Ä–∏–ø—Ç –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π PasteBin Pro
# –ó–∞–ø—É—Å–∫: .\install-dependencies.ps1

function Write-Info {
    param([string]$Message)
    Write-Host "[INFO] $Message" -ForegroundColor Green
}

function Write-Error {
    param([string]$Message)
    Write-Host "[ERROR] $Message" -ForegroundColor Red
}

function Write-Warning {
    param([string]$Message)
    Write-Host "[WARNING] $Message" -ForegroundColor Yellow
}

function Test-Python {
    Write-Info "–ü—Ä–æ–≤–µ—Ä–∫–∞ Python..."
    
    try {
        $pythonVersion = py --version 2>$null
        if ($pythonVersion) {
            Write-Info "Python –Ω–∞–π–¥–µ–Ω: $pythonVersion"
            return $true
        }
    } catch {
        # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏
    }
    
    try {
        $pythonVersion = python --version 2>$null
        if ($pythonVersion) {
            Write-Info "Python –Ω–∞–π–¥–µ–Ω: $pythonVersion"
            return $true
        }
    } catch {
        # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏
    }
    
    Write-Error "Python –Ω–µ –Ω–∞–π–¥–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python 3.8+ —Å https://python.org"
    return $false
}

function Install-VirtualEnv {
    Write-Info "–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    
    if (Test-Path ".venv") {
        Write-Warning "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        return $true
    }
    
    try {
        py -m venv .venv
        if ($LASTEXITCODE -eq 0) {
            Write-Info "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ"
            return $true
        } else {
            Write-Error "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è"
            return $false
        }
    } catch {
        Write-Error "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è: $($_.Exception.Message)"
        return $false
    }
}

function Activate-VirtualEnv {
    Write-Info "–ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    
    try {
        .\.venv\Scripts\Activate.ps1
        if ($LASTEXITCODE -eq 0) {
            Write-Info "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ"
            return $true
        } else {
            Write-Error "–û—à–∏–±–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è"
            return $false
        }
    } catch {
        Write-Error "–û—à–∏–±–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è: $_"
        return $false
    }
}

function Install-BasicDependencies {
    Write-Info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    $dependencies = @(
        "Flask==2.3.3",
        "python-dotenv==1.0.0", 
        "requests==2.31.0",
        "SQLAlchemy==2.0.21",
        "Flask-SQLAlchemy==3.0.5",
        "minio==7.1.17",
        "alembic==1.12.0"
    )
    
    foreach ($dep in $dependencies) {
        Write-Info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ $dep..."
        try {
            pip install $dep
            if ($LASTEXITCODE -ne 0) {
                Write-Warning "–ü—Ä–æ–±–ª–µ–º–∞ —Å —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π $dep"
            }
        } catch {
            Write-Warning "–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ $dep: $_"
        }
    }
}

function Install-PostgreSQLDriver {
    Write-Info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ PostgreSQL –¥—Ä–∞–π–≤–µ—Ä–∞..."
    
    # –ü–æ–ø—ã—Ç–∫–∞ 1: psycopg2-binary
    Write-Info "–ü–æ–ø—ã—Ç–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ psycopg2-binary..."
    try {
        pip install psycopg2-binary
        if ($LASTEXITCODE -eq 0) {
            Write-Info "psycopg2-binary —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ"
            return $true
        }
    } catch {
        Write-Warning "psycopg2-binary –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è"
    }
    
    # –ü–æ–ø—ã—Ç–∫–∞ 2: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip –∏ –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞
    Write-Info "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip –∏ –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞..."
    try {
        python -m pip install --upgrade pip
        pip install psycopg2-binary
        if ($LASTEXITCODE -eq 0) {
            Write-Info "psycopg2-binary —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è pip"
            return $true
        }
    } catch {
        Write-Warning "psycopg2-binary –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è pip"
    }
    
    # –ü–æ–ø—ã—Ç–∫–∞ 3: –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫
    Write-Info "–ü–æ–ø—ã—Ç–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏–∑ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞..."
    try {
        pip install --only-binary=all psycopg2-binary
        if ($LASTEXITCODE -eq 0) {
            Write-Info "psycopg2-binary —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–∑ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞"
            return $true
        }
    } catch {
        Write-Warning "psycopg2-binary –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è –∏–∑ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞"
    }
    
    # –ü–æ–ø—ã—Ç–∫–∞ 4: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ wheel
    Write-Info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ wheel –∏ –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞..."
    try {
        pip install wheel
        pip install psycopg2-binary
        if ($LASTEXITCODE -eq 0) {
            Write-Info "psycopg2-binary —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ wheel"
            return $true
        }
    } catch {
        Write-Warning "psycopg2-binary –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ wheel"
    }
    
    Write-Error "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å PostgreSQL –¥—Ä–∞–π–≤–µ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
    Write-Info "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Ä—É—á–Ω—É—é:"
    Write-Host "  1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Visual Studio Build Tools" -ForegroundColor Yellow
    Write-Host "  2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ PostgreSQL –¥–ª—è Windows" -ForegroundColor Yellow
    Write-Host "  3. –î–æ–±–∞–≤—å—Ç–µ PostgreSQL bin –≤ PATH" -ForegroundColor Yellow
    Write-Host "  4. –í—ã–ø–æ–ª–Ω–∏—Ç–µ: pip install psycopg2" -ForegroundColor Yellow
    
    return $false
}

function Test-Docker {
    Write-Info "–ü—Ä–æ–≤–µ—Ä–∫–∞ Docker..."
    
    try {
        docker --version | Out-Null
        if ($LASTEXITCODE -eq 0) {
            Write-Info "Docker –Ω–∞–π–¥–µ–Ω"
            return $true
        }
    } catch {
        Write-Error "Docker –Ω–µ –Ω–∞–π–¥–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Desktop —Å https://docker.com"
        return $false
    }
    
    try {
        docker-compose --version | Out-Null
        if ($LASTEXITCODE -eq 0) {
            Write-Info "Docker Compose –Ω–∞–π–¥–µ–Ω"
            return $true
        }
    } catch {
        Write-Error "Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        return $false
    }
    
    return $false
}

function Show-InstallationSummary {
    Write-Info "`n=== –°–í–û–î–ö–ê –£–°–¢–ê–ù–û–í–ö–ò ==="
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Python
    if (Test-Python) {
        Write-Host "  ‚úÖ Python" -ForegroundColor Green
    } else {
        Write-Host "  ‚ùå Python" -ForegroundColor Red
    }
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
    if (Test-Path ".venv") {
        Write-Host "  ‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ" -ForegroundColor Green
    } else {
        Write-Host "  ‚ùå –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ" -ForegroundColor Red
    }
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker
    if (Test-Docker) {
        Write-Host "  ‚úÖ Docker" -ForegroundColor Green
    } else {
        Write-Host "  ‚ùå Docker" -ForegroundColor Red
    }
    
    Write-Info "`n=== –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò ==="
    Write-Host "1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–∏—Å—ã: .\start-services.ps1 start" -ForegroundColor Cyan
    Write-Host "2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: py app.py" -ForegroundColor Cyan
    Write-Host "3. –û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä: http://127.0.0.1:5000" -ForegroundColor Cyan
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
Write-Info "üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π PasteBin Pro"
Write-Info "====================================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Python
if (-not (Test-Python)) {
    exit 1
}

# –°–æ–∑–¥–∞–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
if (-not (Install-VirtualEnv)) {
    exit 1
}

# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
if (-not (Activate-VirtualEnv)) {
    exit 1
}

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
Install-BasicDependencies

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º PostgreSQL –¥—Ä–∞–π–≤–µ—Ä
Install-PostgreSQLDriver

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker
Test-Docker

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–≤–æ–¥–∫—É
Show-InstallationSummary

Write-Info "`nüéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
