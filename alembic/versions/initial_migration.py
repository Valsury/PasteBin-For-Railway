"""Initial migration

Revision ID: initial_migration
Revises: 
Create Date: 2025-08-22 18:00:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'initial_migration'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Создаем таблицу users
    op.create_table('users',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('username', sa.String(length=80), nullable=False),
        sa.Column('email', sa.String(length=120), nullable=False),
        sa.Column('password_hash', sa.String(length=255), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('email'),
        sa.UniqueConstraint('username')
    )
    
    # Создаем таблицу tags
    op.create_table('tags',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=50), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name')
    )
    
    # Создаем таблицу pastes
    op.create_table('pastes',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('uuid', sa.String(length=36), nullable=True),
        sa.Column('title', sa.String(length=255), nullable=False),
        sa.Column('content_hash', sa.String(length=64), nullable=False),
        sa.Column('language', sa.String(length=50), nullable=True),
        sa.Column('lifetime', sa.Integer(), nullable=True),
        sa.Column('is_private', sa.Boolean(), nullable=True),
        sa.Column('views_count', sa.Integer(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('expires_at', sa.DateTime(), nullable=True),
        sa.Column('is_expired', sa.Boolean(), nullable=True),
        sa.Column('author_id', sa.Integer(), nullable=True),
        sa.Column('tags', sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(['author_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('uuid')
    )
    
    # Создаем таблицу paste_tags (связующая таблица)
    op.create_table('paste_tags',
        sa.Column('paste_id', sa.Integer(), nullable=False),
        sa.Column('tag_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['paste_id'], ['pastes.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('paste_id', 'tag_id')
    )
    
    # Создаем индексы
    op.create_index('idx_pastes_language', 'pastes', ['language'])
    op.create_index('idx_pastes_title_search', 'pastes', ['title'])
    op.create_index('idx_pastes_created_at', 'pastes', ['created_at'])
    op.create_index('idx_pastes_expires_at', 'pastes', ['expires_at'])
    
    # Создаем представление recent_pastes
    op.execute("""
        CREATE OR REPLACE VIEW recent_pastes AS
        SELECT 
            p.id,
            p.uuid,
            p.title,
            p.language,
            p.lifetime,
            p.is_private,
            p.views_count,
            p.created_at,
            p.expires_at,
            p.is_expired,
            u.username as author_name
        FROM pastes p
        LEFT JOIN users u ON p.author_id = u.id
        WHERE p.is_expired = false
        ORDER BY p.created_at DESC
    """)
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Удаляем представление
    op.execute("DROP VIEW IF EXISTS recent_pastes")
    
    # Удаляем индексы
    op.drop_index('idx_pastes_expires_at', table_name='pastes')
    op.drop_index('idx_pastes_created_at', table_name='pastes')
    op.drop_index('idx_pastes_title_search', table_name='pastes')
    op.drop_index('idx_pastes_language', table_name='pastes')
    
    # Удаляем таблицы
    op.drop_table('paste_tags')
    op.drop_table('pastes')
    op.drop_table('tags')
    op.drop_table('users')
    
    # ### end Alembic commands ###
